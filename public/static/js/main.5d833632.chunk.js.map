{"version":3,"sources":["Utils/Constants.js","Components/FormTest.js","Components/FormList.js","Components/ViewForm.js","Components/SubmittedFormList.js","Components/ButtonAppBar.js","Components/SubmittedViewForm.js","App.js","serviceWorker.js","theme.js","index.js"],"names":["server","formsList","users","Soosk","props","handleSubmit","e","preventDefault","form","validateFields","err","values","dat","email","password","console","log","fetch","method","headers","body","JSON","stringify","then","r","json","data","status","cookies","token","user","access_token","set","setState","window","location","assign","state","get","getFieldDecorator","this","onSubmit","className","Item","rules","required","message","prefix","type","style","color","placeholder","htmlType","Component","FormTest","Form","create","name","withCookies","FormList","url","response","forms","itemLayout","dataSource","renderItem","item","Meta","avatar","title","to","Option","Select","Asdsd","id","match","params","mode","cache","credentials","redirect","referrerPolicy","normFile","Array","isArray","fileList","handleChange","date","dateString","handleSelect","value","selectedShit","onChangeNum","buildForm","ops","fields","items","i","options","j","op","push","key","label","hasFeedback","sumlat","sumlng","lat1","parseFloat","lat","lng1","long","position","lng","length","height","initialCenter","google","width","margin","zoom","onChange","formItems","labelCol","span","wrapperCol","gutter","offset","mapWrapper","GoogleApiWrapper","apiKey","ViewForm","withRouter","SubmittedFormList","deleteItem","eid","target","dataset","confirm","result","forEach","actions","data-eid","icon","onClick","username","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","ButtonAppBar","classes","AppBar","Toolbar","IconButton","edge","aria-label","Typography","variant","csvButton","vid","open","numericSum","parseInt","vals","split","borderColor","borderStyle","borderWidth","borderRadius","padding","sum","SubmittedViewForm","App","MenuIcon","swap","bind","page","MenuList","MenuView","Container","path","exact","Box","center","my","component","gutterBottom","React","textAlign","display","marginLeft","Boolean","hostname","createMuiTheme","palette","primary","main","secondary","error","red","A400","background","default","ReactDOM","render","ThemeProvider","CssBaseline","CookiesProvider","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5d833632.chunk.js","sourcesContent":["\nconst server = 'https://ieng-p.herokuapp.com/'\nconst formsList = 'api/forms'\nconst users = 'api/users'\n// const submittedForms = 'api/submittedForms'\nexport {server, formsList, users}","import React, {Component} from 'react'\n// import { withFormik } from 'formik'\n// import * as Yup from 'yup'\n// import classnames from 'classnames'\nimport { instanceOf } from 'prop-types';\nimport {Form, Icon, Input, Button, Checkbox} from 'antd';\nimport {Link} from \"react-router-dom\";\nimport { withCookies, Cookies } from 'react-cookie';\nimport {server, users} from \"../Utils/Constants\";\n\nclass Soosk extends Component {\n    static propTypes = {\n        cookies: instanceOf(Cookies).isRequired\n    };\n    constructor(props) {\n        super(props);\n\n        const { cookies } = props;\n        this.state = {\n            token: cookies.get('token') || 'Ben'\n        };\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                let dat = {\n                    \"email\": values.email,\n                    \"password\": values.password\n                }\n                console.log('Received values of form: ', values);\n                let url = server + users + '/login';\n                fetch(url, {\n                    method: 'POST', // *GET, POST, PUT, DELETE, etc.\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify(dat) // body data type must match \"Content-Type\" header\n                }).then(r => r.json())\n                    .then(data => {\n                        console.log(data)\n                        if (data.status === \"OK\") {\n                            const { cookies } = this.props;\n                            let token = data.user.access_token;\n                            cookies.set('token', token);\n                            this.setState({ token });\n                            window.location.assign(\"/list\");\n                        }\n                    })\n\n            }\n        });\n    };\n\n    render() {\n        const {getFieldDecorator} = this.props.form;\n        return (\n            <Form onSubmit={this.handleSubmit} className=\"login-form\">\n                <Form.Item>\n                    {getFieldDecorator('email', {\n                        rules: [{required: true, message: 'Please input your username!'}],\n                    })(\n                        <Input\n                            prefix={<Icon type=\"user\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n                            placeholder=\"Email\"\n                        />,\n                    )}\n                </Form.Item>\n                <Form.Item>\n                    {getFieldDecorator('password', {\n                        rules: [{required: true, message: 'Please input your Password!'}],\n                    })(\n                        <Input\n                            prefix={<Icon type=\"lock\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n                            type=\"password\"\n                            placeholder=\"Password\"\n                        />,\n                    )}\n                </Form.Item>\n                <Form.Item>\n                    {/*{getFieldDecorator('remember', {*/}\n                    {/*    valuePropName: 'checked',*/}\n                    {/*    initialValue: true,*/}\n                    {/*})(<Checkbox>Remember me</Checkbox>)}*/}\n                    {/*<br/>*/}\n                    {/*<a className=\"login-form-forgot\" href=\"\">*/}\n                    {/*    Forgot password*/}\n                    {/*</a>*/}\n                    {/*<br/>*/}\n                    <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                        {/*<Link to={`/list`}>Log in</Link>*/}\n                        Log In\n                    </Button>\n                    {/*<br/>*/}\n                    {/*Or <a href=\"\">register now!</a>*/}\n                </Form.Item>\n            </Form>\n        );\n    }\n}\n\nconst FormTest = Form.create({name: 'normal_login'})(Soosk);\n\nexport default withCookies(FormTest)\n\n\n","import React, {Component} from 'react'\nimport {List, Avatar} from 'antd';\nimport MenuList from '@material-ui/icons/List';\nimport {Link} from \"react-router-dom\";\nimport {formsList, server, submittedForms} from '../Utils/Constants'\nimport { withCookies, Cookies } from 'react-cookie';\nimport {instanceOf} from \"prop-types\";\n\nclass FormList extends Component {\n    static propTypes = {\n        cookies: instanceOf(Cookies).isRequired\n    };\n    constructor(props) {\n        super(props);\n\n        const { cookies } = props;\n        this.state = {\n            token: cookies.get('token') || 'Ben'\n        };\n    }\n\n    componentDidMount() {\n        let url = server + formsList\n        console.log(url)\n        fetch(url, {\n            method: 'GET',\n            headers: {\n                'x-access-token': this.state.token\n            }\n        })\n            .then(response => response.json())\n            .then(data => this.setState({'data': data.forms}));\n    }\n\n    render() {\n        console.log(this.state.data)\n        return (\n            <List\n                itemLayout=\"horizontal\"\n                dataSource={this.state.data}\n                renderItem={item => (\n                    <List.Item>\n                        <List.Item.Meta\n                            avatar={<MenuList/>}\n                            title={<Link to={`/submitted/${item[\"_id\"]}/list`}>{item.title}</Link>}\n                        />\n                    </List.Item>\n                )}\n            />\n        )\n    }\n}\n\nexport default withCookies(FormList)\n","import React, {Component} from 'react'\nimport {\n    withRouter\n} from \"react-router\";\nimport {\n    Form,\n    Select,\n    InputNumber,\n    Switch,\n    Radio,\n    Slider,\n    Button,\n    Upload,\n    Icon,\n    Rate,\n    Checkbox,\n    Row,\n    Col,\n    DatePicker,\n    Input\n} from 'antd';\nimport {Map, InfoWindow, Marker, GoogleApiWrapper} from 'google-maps-react';\nimport {server, formsList} from \"../Utils/Constants\";\n\nconst { Option } = Select\nclass Asdsd extends Component {\n    constructor() {\n        super();\n        this.state = {\n            formItems: []\n        }\n    }\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                console.log('Received values of form: ', values);\n                let {id} = this.props.match.params\n                fetch(`http://localhost:3002/api/forms/${id}`, {\n                    method: 'POST', // *GET, POST, PUT, DELETE, etc.\n                    mode: 'no-cors', // no-cors, *cors, same-origin\n                    cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n                    credentials: 'same-origin', // include, *same-origin, omit\n                    headers: {\n                        'Content-Type': 'application/json'\n                        // 'Content-Type': 'application/x-www-form-urlencoded',\n                    },\n                    redirect: 'follow', // manual, *follow, error\n                    referrerPolicy: 'no-referrer', // no-referrer, *client\n                    body: JSON.stringify(values) // body data type must match \"Content-Type\" header\n                }).then(r => console.log(r));\n            }\n        });\n    };\n    normFile = e => {\n        console.log('Upload event:', e);\n        if (Array.isArray(e)) {\n            return e;\n        }\n        return e && e.fileList;\n    };\n    handleChange = (date, dateString) => {\n        console.log(date, dateString);\n\n    }\n    handleSelect = (value) => {\n        console.log(`selected ${value}`);\n        this.setState({selectedShit: value})\n    }\n    onChangeNum = (value) => {\n        console.log(value)\n    }\n\n    componentWillMount() {\n        let {id} = this.props.match.params\n        let url = server + formsList + `/${id}`\n        console.log(url)\n        fetch(url)\n            .then(response => response.json())\n            .then(data => {\n                this.setState({form: data})\n                this.buildForm()\n            })\n    }\n\n    buildForm = () => {\n        let ops;\n        const {getFieldDecorator} = this.props.form;\n        let fields = this.state.form.fields\n        var items = []\n        for (let i in fields) {\n            let item = fields[i]\n            if (item.type === 'Text') {\n                if (item.options){\n                    ops = [];\n                    for (let j in item.options) {\n                        let op = item.options[j]\n                        ops.push(<Option key={op.value} value={op.value} >{op.label}</Option>);\n                    }\n                    items.push(\n                        <Row key={item.name}>\n                            <Form.Item label={item.title} hasFeedback>\n                                {getFieldDecorator(item.name, {\n                                    rules: [{ required: true, message: `Please select ${item.title}` }],\n                                })(\n                                    <Select placeholder=\"Please select an Option\">\n                                        {ops}\n                                    </Select>,\n                                )}\n                            </Form.Item>\n                        </Row>,\n                    );\n\n                } else {\n                    items.push(\n                        <Row key={item.name}>\n                        <Form.Item label={item.title}>\n                            {getFieldDecorator(item.title, {\n                                rules: [{required: !!item.required, message: `Please input your ${item.title}`}],\n                            })(\n                                <Input\n                                    prefix={<Icon type=\"form\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n                                    placeholder={item.title}\n                                />,\n                            )}\n                        </Form.Item>\n                        </Row>,\n                    )\n                }\n            } else if (item.type === 'Location') {\n                const style = {\n                    width: '400px',\n                    height: '400px',\n                    margin: '16px'\n                };\n                ops = [];\n                var sumlat = 0.0\n                var sumlng = 0.0\n                if (item.options) {\n                    for (let j in item.options) {\n                        let op = item.options[j]\n                        let lat1 = parseFloat(op.value.lat)\n                        let lng1 = parseFloat(op.value.long)\n                        sumlat += lat1\n                        sumlng += lng1\n                        ops.push(<Marker\n                            key={j}\n                            title={op.label}\n                            name={`item-${j}`}\n                            position={{lat: lat1, lng: lng1}} />);\n                    }\n                    sumlat = sumlat / item.options.length\n                    sumlng = sumlng / item.options.length\n                }\n                items.push(\n                    <Row key={item.name} style={{height: 450}}>\n                    <Form.Item label={item.title} >\n                                <Map initialCenter={{lat: sumlat, lng:sumlng}} google={this.props.google} style={style} zoom={5}>\n                                    {ops}\n                                    <InfoWindow>\n                                        <div>\n                                            <h1>{item.title}</h1>\n                                        </div>\n                                    </InfoWindow>\n                                </Map>\n                    </Form.Item>\n                    </Row>,\n\n                )\n            } else if (item.type === 'Number') {\n                items.push(\n                    <Row key={item.name}>\n                    <Form.Item label={item.title}>\n                        {getFieldDecorator(item.title, {\n                            rules: [{required: !!item.required, message: `Please input your ${item.title}`}],\n                        })(\n                            <InputNumber onChange={this.onChangeNum()}/>,\n                        )}\n                    </Form.Item>\n                    </Row>,\n                )\n            } else if (item.type === 'Date') {\n                items.push(\n                    <Row key={item.name}>\n                    <Form.Item label={item.title}>\n                        {getFieldDecorator(item.title, {\n                            rules: [{required: !!item.required, message: `Please input your ${item.title}`}],\n                        })(\n                            <DatePicker onChange={this.handleChange()} placeholder={item.title}/>,\n                        )}\n                    </Form.Item>\n                    </Row>,\n                )\n            }\n        }\n        this.setState({formItems: items})\n        return items\n    }\n\n    render() {\n        const formItemLayout = {\n            labelCol: { span: 6 },\n            wrapperCol: { span: 14 },\n        };\n        const {getFieldDecorator} = this.props.form;\n        return (\n            <div>\n                <h1> View </h1>\n                <Form {...formItemLayout} onSubmit={this.handleSubmit}>\n                {/*<Form onSubmit={this.handleSubmit} className=\"login-form\">*/}\n                    <Row gutter={24}>\n                        {this.state.formItems}\n                    </Row>\n\n                    <Form.Item wrapperCol={{ span: 12, offset: 6 }}>\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Submit\n                        </Button>\n                    </Form.Item>\n                </Form>\n\n            </div>\n        )\n    }\n}\n\nconst mapWrapper = GoogleApiWrapper({\n    apiKey: (\"AIzaSyDjs0u02-62FMwrtxMxci5pc6PIubSyW28\")\n})(Asdsd)\nconst ViewForm = Form.create({ name: 'validate_other' })(mapWrapper);\n\nexport default withRouter(ViewForm)\n\n\n\n\n\n\n\n","import React, {Component} from 'react'\nimport {List, Avatar, Button} from 'antd';\nimport MenuList from '@material-ui/icons/List';\nimport {Link} from \"react-router-dom\";\nimport {server, formsList} from '../Utils/Constants'\nimport {\n    withRouter\n} from \"react-router\";\nimport { withCookies, Cookies } from 'react-cookie';\nimport {instanceOf} from \"prop-types\";\n\nclass SubmittedFormList extends Component {\n    static propTypes = {\n        cookies: instanceOf(Cookies).isRequired\n    };\n    constructor(props) {\n        super(props);\n\n        const { cookies } = props;\n        this.state = {\n            token: cookies.get('token') || 'Ben'\n        };\n    }\n\n    componentDidMount() {\n        let {id} = this.props.match.params\n        let url = server + formsList + `/${id}/list`\n        console.log(url)\n        fetch(url, {\n            method: 'GET',\n            headers: {\n                'x-access-token': this.state.token\n            }\n        })\n            .then(response => response.json())\n            .then(data => this.setState({'data': data}));\n    }\n\n    deleteItem = e => {\n        let {eid} = e.target.dataset\n        let {id} = this.props.match.params\n        console.log(eid)\n        // eslint-disable-next-line no-restricted-globals\n        let con = confirm('Are you sure?')\n        if (con) {\n            let url = server + formsList + `/${id}/list/${eid}`\n            fetch(url, {\n                method: 'DELETE',\n            })\n                .then(response => response.json())\n                .then(data => {\n                    console.log(data)\n                    if (data.result === \"ok\"){\n                        let dat = []\n                        this.state.data.forEach(item => {\n                            if (item[\"_id\"] !== eid) {\n                                dat.push(item)\n                            }\n                        })\n                        this.setState({'data': dat})\n                    }\n\n                });\n        }\n    }\n\n    render() {\n\n        return (\n            <List\n                itemLayout=\"horizontal\"\n                dataSource={this.state.data}\n                renderItem={item => (\n                    <List.Item\n                        key = {item[\"_id\"]}\n                        actions={[<Button data-eid={item[\"_id\"]} icon=\"delete\" type=\"danger\" onClick={this.deleteItem}/>]}\n                    >\n                        <List.Item.Meta\n                            avatar={<MenuList/>}\n                            title={<Link\n                                to={`/submitted/${this.props.match.params.id}/view/${item[\"_id\"]}`}>{item.username}</Link>}\n                        />\n                    </List.Item>\n                )}\n            />\n        )\n    }\n}\n\nexport default withCookies(withRouter(SubmittedFormList))\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function ButtonAppBar(props) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            {props.icon}\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            Form Generator\n          </Typography>\n          {/*<Button color=\"inherit\">Login</Button>*/}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React, {Component} from 'react'\nimport {\n    withRouter\n} from \"react-router\";\nimport {\n    Form,\n    Select,\n    InputNumber,\n    Switch,\n    Radio,\n    Slider,\n    Button,\n    Upload,\n    Icon,\n    Rate,\n    Checkbox,\n    Row,\n    Col,\n    DatePicker,\n    Input\n} from 'antd';\nimport {Map, InfoWindow, Marker, GoogleApiWrapper} from 'google-maps-react';\nimport {server, formsList} from \"../Utils/Constants\";\nimport { withCookies, Cookies } from 'react-cookie';\nimport {instanceOf} from \"prop-types\";\n\nconst {Option} = Select\n\nclass Asdsd extends Component {\n    static propTypes = {\n        cookies: instanceOf(Cookies).isRequired\n    };\n    constructor(props) {\n        super(props);\n\n        const { cookies } = props;\n        this.state = {\n            token: cookies.get('token') || 'Ben',\n            formItems: []\n        };\n    }\n\n    csvButton = e => {\n        let {id, vid} = this.props.match.params\n        let url = server + formsList + `/${id}/list/${vid}/csv`\n        window.open(url, \"_blank\")\n    }\n\n    componentWillMount() {\n        let {id, vid} = this.props.match.params\n        let url = server + formsList + `/${id}/list/${vid}`\n        console.log(url)\n        fetch(url, {\n            method: 'GET',\n            headers: {\n                'x-access-token': this.state.token\n            }\n        })\n            .then(response => response.json())\n            .then(data => {\n                this.setState({form: data})\n                this.buildForm()\n            })\n    }\n\n    buildForm = () => {\n        let ops;\n        const {getFieldDecorator} = this.props.form;\n        let fields = this.state.form.fields\n        var items = []\n        var numericSum = 0\n        for (let i in fields) {\n            let item = fields[i]\n            if (item.type === 'Number') {\n                numericSum += parseInt(item.value, 10)\n            }\n            if (item.type === 'Location') {\n                const style = {\n                    width: '400px',\n                    height: '400px',\n                    margin: '16px'\n                };\n                ops = [];\n                var sumlat = 0.0\n                var sumlng = 0.0\n                let vals = item.value.split('&')\n                sumlat = parseFloat(vals[0].split('=')[1])\n                sumlng = parseFloat(vals[1].split('=')[1])\n                ops.push(<Marker\n                    title={item.title}\n                    name={item.name}\n                    position={{lat: sumlat, lng: sumlng}}/>);\n                items.push(\n                    <Row key={item.name} style={{height: 450}}>\n                        <span>{item.title}:</span>\n                        <br/>\n                        <Map initialCenter={{lat: sumlat, lng: sumlng}} google={this.props.google} style={style}\n                             zoom={5}>\n                            {ops}\n                            <InfoWindow>\n                                <div>\n                                    <h1>{item.title}</h1>\n                                </div>\n                            </InfoWindow>\n                        </Map>\n                    </Row>,\n                )\n            } else {\n                items.push(\n                    <Row key={item.name}>\n                        <div style={{borderColor: \"grey\", borderStyle: \"solid\", borderWidth: \"1px\", borderRadius: \"20px\", padding: \"10px\", margin: \"10px\"}}>\n                                <span>\n                                    {item.title}:\n                                </span>\n                            <span>\n                                    &nbsp; {item.value}\n                                </span>\n                        </div>\n                    </Row>,\n                )\n\n            }\n        }\n        this.setState({formItems: items, sum: numericSum})\n        return items\n    }\n\n    render() {\n        return (\n            <div>\n                {this.state.formItems}\n                <Row>\n                    <div style={{borderColor: \"grey\", borderStyle: \"solid\", borderWidth: \"1px\", borderRadius: \"20px\", padding: \"10px\", margin: \"10px\"}}>\n                                <span>\n                                    Sum Of Numeric Fields:\n                                </span>\n                        <span>\n                                    &nbsp; {this.state.sum}\n                                </span>\n                    </div>\n                </Row>\n                <Row style={{margin: \"20px\"}}>\n                    <Button onClick={this.csvButton}>\n                        Get CSV\n                    </Button>\n                </Row>\n            </div>\n        )\n    }\n}\n\nconst mapWrapper = GoogleApiWrapper({\n    apiKey: (\"AIzaSyDjs0u02-62FMwrtxMxci5pc6PIubSyW28\")\n})(Asdsd)\nconst SubmittedViewForm = Form.create({name: 'validate_other'})(mapWrapper);\n\nexport default withCookies(withRouter(SubmittedViewForm))\n\n\n\n\n\n\n\n","import React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport FormTest from './Components/FormTest'\nimport FormList from './Components/FormList'\nimport ViewForm from './Components/ViewForm'\nimport MenuIcon from '@material-ui/icons/SentimentSatisfiedAlt';\nimport MenuView from '@material-ui/icons/Edit';\nimport MenuList from '@material-ui/icons/List';\nimport SubmittedFormList from \"./Components/SubmittedFormList\";\nimport { withCookies, Cookies } from 'react-cookie';\n\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport ButtonAppBar from './Components/ButtonAppBar'\nimport SubmittedViewForm from \"./Components/SubmittedViewForm\";\n\nclass App extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            icon: MenuIcon\n        }\n        this.swap = this.swap.bind(this)\n    }\n\n    swap(page) {\n        if (page === \"test\") {\n            this.setState({icon: MenuIcon})\n        } else if (page === \"list\") {\n            this.setState({icon: MenuList})\n        } else if (page === \"view\") {\n            this.setState({icon: MenuView})\n        } else {\n            this.setState({icon: MenuView})\n        }\n    }\n\n    static center = {\n        textAlign: 'center',\n        display: 'block',\n        marginLeft: 'auto',\n        marginRight: 'auto'\n    }\n\n    render() {\n        return (\n            <Router>\n                <Container>\n                    <ButtonAppBar icon=\"Admin Panel\"/>\n                    <Container>\n                        {/*<Box style={this.center} my={8}>*/}\n                        {/*  <Typography variant=\"h4\" component=\"h1\" gutterBottom>*/}\n                        {/*    Select A Form To Fill Out*/}\n                        {/*  </Typography>*/}\n                        {/*</Box>*/}\n                        <div>\n\n                            {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n                            <Switch>\n                                <Route path=\"/view/:id\">\n                                    {/*{this.swap(\"view\")}*/}\n                                    <ViewForm/>\n                                </Route>\n                                <Route path=\"/submitted/:id/list\">\n                                    <SubmittedFormList/>\n                                </Route>\n                                <Route path=\"/submitted/:id/view/:vid\">\n                                    <SubmittedViewForm/>\n                                </Route>\n                                <Route path=\"/list\">\n                                    {/*{this.swap(\"list\")}*/}\n                                    <FormList/>\n                                </Route>\n                                <Route exact path=\"/\">\n                                    {/*{this.swap(\"test\")}*/}\n                                    <FormTest/>\n                                </Route>\n                                <Route path=\"*\">\n                                    <Box style={App.center} my={8}>\n                                        <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n                                            404\n                                            <br/>\n                                            Page Not Found\n                                        </Typography>\n                                    </Box>\n                                </Route>\n                            </Switch>\n                        </div>\n                    </Container>\n\n                </Container>\n            </Router>\n        );\n    }\n}\n\n// function App() {\n//   return (\n//     {/*<div className=\"App\">*/}\n//       {/*<header className=\"App-header\">*/}\n//         {/*<img src={logo} className=\"App-logo\" alt=\"logo\" />*/}\n//         {/*<p>*/}\n//           {/*Edit <code>src/App.js</code> and save to reload.*/}\n//         {/*</p>*/}\n//         {/*<a*/}\n//           {/*className=\"App-link\"*/}\n//           {/*href=\"https://reactjs.org\"*/}\n//           {/*target=\"_blank\"*/}\n//           {/*rel=\"noopener noreferrer\"*/}\n//         {/*>*/}\n//           {/*Learn React*/}\n//         {/*</a>*/}\n//       {/*</header>*/}\n//       {/*<main>*/}\n//         {/*<FormTest />*/}\n//       {/*</main>*/}\n//     {/*</div>*/}\n\n// );\n// }\n\nexport default withCookies(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { red } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#556cd6',\n    },\n    secondary: {\n      main: '#19857b',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#fff',\n    },\n  },\n});\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport {ThemeProvider} from '@material-ui/core/styles';\nimport theme from './theme';\nimport {CookiesProvider} from 'react-cookie';\n\n\nReactDOM.render(\n    <ThemeProvider theme={theme}>\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline/>\n        <CookiesProvider>\n            <App/>\n        </CookiesProvider>\n    </ThemeProvider>\n    ,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}